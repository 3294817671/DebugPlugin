#pragma once
#include <ntifs.h>
#define IOCTL_UNKNOWN_BASE					            FILE_DEVICE_UNKNOWN
#define IOCTROL_PLUGIN_Initialize                       CTL_CODE(IOCTL_UNKNOWN_BASE, 0x900, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IOCTROL_MDL_WRITE_R0     		                CTL_CODE(IOCTL_UNKNOWN_BASE, 0x901, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) 
#define IOCTROL_MDL_WRITE_R3    		                CTL_CODE(IOCTL_UNKNOWN_BASE, 0x902, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) 
#define IOCTL_Read_PhysicalAddress	                    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x903, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTROL_READ_OR_WRITE		                    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x904, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTL_SET_OR_GET_THREAD_CONTEXT		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x905, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTL_SUSPENTHREAD_OR_RESUMETHREAD	            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x906, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTROL_PsSuspendProcessOrPsResumProcess		CTL_CODE(IOCTL_UNKNOWN_BASE, 0x907, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_ZwDuplicateObject		                CTL_CODE(IOCTL_UNKNOWN_BASE, 0x908, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_ZwCreateThreadEx		                CTL_CODE(IOCTL_UNKNOWN_BASE, 0x909, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_ZwProtectVirtualMemory		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x910, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_MmMapViewOfSection		                CTL_CODE(IOCTL_UNKNOWN_BASE, 0x911, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_MmUnMapViewOfSection		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x912, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_ALLOCATE_MEMORY2    		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x913, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_OPEN_PROCESS         		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x914, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_OPEN_THREAD         		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x915, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)  
#define IOCTROL_HANDLE_TABLE         		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x916, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_MMCOPYMEMORY         		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x917, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_GET_CR3              		            CTL_CODE(IOCTL_UNKNOWN_BASE, 0x918, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) 
#define IOCTROL_SET_SYSTEM_NOTIY              		    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x919, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTROL_GET_DEBUGEVENT              		    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x920, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTROL_DBKSUSPENDPROCESS              		    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x921, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTROL_DBKRESUMEPROCESS              		    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x922, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SUSPENTHREAD_OR_RESUMETHREAD_BY_TID       CTL_CODE(IOCTL_UNKNOWN_BASE, 0x923, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_ENABLE_EXPAND_FUNCTION                    CTL_CODE(IOCTL_UNKNOWN_BASE, 0x924, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_ENABLE_DELETE_FILE                        CTL_CODE(IOCTL_UNKNOWN_BASE, 0x925, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

namespace ioDevice
{

	NTSTATUS Dispatcher(_In_ PDEVICE_OBJECT DeviceObject, _In_ PIRP Irp);
	NTSTATUS CreateDevice(IN PDRIVER_OBJECT pDriverObject);
	VOID DeleteDevice(IN PDRIVER_OBJECT pDriverObject);

};

